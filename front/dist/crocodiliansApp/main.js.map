{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/carousel/carousel.component.ts","./src/app/components/carousel/carousel.component.html","./src/app/components/crocodilians/crocodilians.component.ts","./src/app/components/crocodilians/crocodilians.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/welcome/welcome.component.ts","./src/app/components/welcome/welcome.component.html","./src/app/service/crocodilians/crocodilians.service.ts","./src/app/service/images/images.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CrocodiliansComponent } from './components/crocodilians/crocodilians.component';\nimport { WelcomeComponent } from './components/welcome/welcome.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/welcome', pathMatch: 'full' },\n  { path: 'welcome', component: WelcomeComponent },\n  { path: 'home', component: CrocodiliansComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'crocodiliansApp';\n}\n","<app-header></app-header>\n<app-footer></app-footer>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CrocodiliansComponent } from './components/crocodilians/crocodilians.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { WelcomeComponent } from './components/welcome/welcome.component';\nimport { CarouselComponent } from './components/carousel/carousel.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CrocodiliansComponent,\n    HeaderComponent,\n    FooterComponent,\n    WelcomeComponent,\n    CarouselComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { ImagesService } from '../../service/images/images.service';\nimport { Images } from '../../interface/images';\n\n@Component({\n  selector: 'app-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.scss']\n})\nexport class CarouselComponent implements OnInit {\n  images: Array<Images>;\n  imagesCarrousel= [];\n  imagesError= [];\n\n  constructor(private imageService: ImagesService) {}\n\n  ngOnInit(): void {\n    this.getImages();\n  }\n\n  getImages() {\n    this.imageService.getImages().subscribe(\n      data => {\n        if (data) {\n          this.getNameImages(data);\n        }\n      },\n      error => {\n        this.imagesError.push(\"Sorry there has been an error getting images\");\n      }\n    );\n  }\n\n  getNameImages(data) {\n  data.forEach(element => {\n    this.imagesCarrousel.push('assets/carousel/' + element.name)\n  });\n  console.log(this.imagesCarrousel)\n}\n\n}\n","<div class=\"container\" *ngIf=\"imagesCarrousel\">\n  <div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\n    <div class=\"carousel-inner\">\n      <div class=\"carousel-item active\" *ngFor=\"let item of imagesCarrousel let i = index\"\n        [ngClass]=\"{'active' : i == 0}\">\n        <img class=\"d-block w-100\" src=\"{{item}}\" alt=\"First slide\">\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" href=\"#myCarousel\" role=\"button\" data-slide=\"prev\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" href=\"#myCarousel\" role=\"button\" data-slide=\"next\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">Next</span>\n    </a>\n  </div>\n</div>\n<div class=\"container\">\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"imagesError.length > 0\">\n    {{imagesError}}\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CrocodiliansService } from '../../service/crocodilians/crocodilians.service';\nimport { Crocodilian } from '../../interface/crocodilian';\n\n@Component({\n  selector: 'app-crocodilians',\n  templateUrl: './crocodilians.component.html',\n  styleUrls: ['./crocodilians.component.scss']\n})\nexport class CrocodiliansComponent implements OnInit {\n  crocodilianData: Crocodilian;\n  crocodilian = [];\n\n  constructor(private crocoliansService: CrocodiliansService) { }\n\n  ngOnInit() {\n    this.getCrocodilians();\n  }\n\n  getCrocodilians() {\n    this.crocoliansService.getCrocodilians().subscribe(data => {\n      this.crocodilianData = data;\n      if (data) {\n        this.setNameImages(data);\n      }\n    },\n    error => {\n      console.log(error);\n    })\n  }\n\n  setNameImages(data) {\n    this.crocodilian = data.map(obj =>\n      Object.assign({}, obj, {image: 'assets/crocodiles-list/' + obj.image})\n    );\n    console.log(this.crocodilian);\n    }\n//  data.forEach(element => {\n\n//         this.crocodilianImagesModified.push('assets/' + element.image)\n//       });\n//       console.log(this.crocodilian)\n//   }\n\n}\n","<div class=\"container\">\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Breed</th>\n      <th scope=\"col\">Age (years)</th>\n      <th scope=\"col\" class=\"title\">Image</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let crocodile of crocodilian\">\n      <td>{{crocodile.name}}</td>\n      <td>{{crocodile.breed}}</td>\n      <td>{{crocodile.age}}</td>\n      <td class=\"image\">\n        <img class=\"d-block w-100\" src=\"{{crocodile.image}}\" alt=\"{{crocodile.name}}\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer class=\"footer\">\n  <div class=\"container\">\n    <span class=\"text-muted text\">by Crr257</span>\n  </div>\n</footer>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n}\n","<nav class=\"navbar navbar-inverse navbar-dark bg-dark\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"navbar-header\">\n                    <a class=\"navbar-brand\"> Crocodilians Reserve </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</nav>\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" href=\"/welcome\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/home\">Crocodilians</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-carousel></app-carousel>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Crocodilian } from \"../../interface/crocodilian\";\nimport { environment } from \"../../../environments/environment\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CrocodiliansService {\n  constructor(private service: HttpClient) {}\n\n  getCrocodilians(): Observable<Crocodilian> {\n    return this.service.get<Crocodilian>(\n      `${environment.backendUrl}/crocodilians`\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { Images } from '../../interface/images';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesService {\n\n  constructor(private service: HttpClient) { }\n\n  getImages(): Observable<Images> {\n    return this.service.get<Images>(`${environment.backendUrl}/images`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendUrl: 'http://localhost:3400/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}